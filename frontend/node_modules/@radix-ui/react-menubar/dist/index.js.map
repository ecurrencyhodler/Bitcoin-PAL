{"mappings":"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","sources":["packages/react/menubar/src/index.ts","packages/react/menubar/src/Menubar.tsx"],"sourcesContent":["export {\n  createMenubarScope,\n  //\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarPortal,\n  MenubarContent,\n  MenubarGroup,\n  MenubarLabel,\n  MenubarItem,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarItemIndicator,\n  MenubarSeparator,\n  MenubarArrow,\n  MenubarSub,\n  MenubarSubTrigger,\n  MenubarSubContent,\n  //\n  Root,\n  Menu,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n} from './Menubar';\nexport type {\n  MenubarProps,\n  MenubarMenuProps,\n  MenubarTriggerProps,\n  MenubarPortalProps,\n  MenubarContentProps,\n  MenubarGroupProps,\n  MenubarLabelProps,\n  MenubarItemProps,\n  MenubarCheckboxItemProps,\n  MenubarRadioGroupProps,\n  MenubarRadioItemProps,\n  MenubarItemIndicatorProps,\n  MenubarSeparatorProps,\n  MenubarArrowProps,\n  MenubarSubProps,\n  MenubarSubTriggerProps,\n  MenubarSubContentProps,\n} from './Menubar';\n","import * as React from 'react';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport * as MenuPrimitive from '@radix-ui/react-menu';\nimport { createMenuScope } from '@radix-ui/react-menu';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\n\nimport type { Scope } from '@radix-ui/react-context';\nimport type * as Radix from '@radix-ui/react-primitive';\n\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * Menubar\n * -----------------------------------------------------------------------------------------------*/\n\nconst MENUBAR_NAME = 'Menubar';\n\ntype ItemData = { value: string; disabled: boolean };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  MenubarTriggerElement,\n  ItemData\n>(MENUBAR_NAME);\n\ntype ScopedProps<P> = P & { __scopeMenubar?: Scope };\nconst [createMenubarContext, createMenubarScope] = createContextScope(MENUBAR_NAME, [\n  createCollectionScope,\n  createRovingFocusGroupScope,\n]);\n\nconst useMenuScope = createMenuScope();\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype MenubarContextValue = {\n  value: string;\n  dir: Direction;\n  loop: boolean;\n  onMenuOpen(value: string): void;\n  onMenuClose(): void;\n  onMenuToggle(value: string): void;\n};\n\nconst [MenubarContextProvider, useMenubarContext] =\n  createMenubarContext<MenubarContextValue>(MENUBAR_NAME);\n\ntype MenubarElement = React.ElementRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = Radix.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface MenubarProps extends PrimitiveDivProps {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?: (value: string) => void;\n  loop?: RovingFocusGroupProps['loop'];\n  dir?: RovingFocusGroupProps['dir'];\n}\n\nconst Menubar = React.forwardRef<MenubarElement, MenubarProps>(\n  (props: ScopedProps<MenubarProps>, forwardedRef) => {\n    const {\n      __scopeMenubar,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      loop = true,\n      dir,\n      ...menubarProps\n    } = props;\n    const direction = useDirection(dir);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenubar);\n    const [value = '', setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue,\n    });\n\n    // We need to manage tab stop id manually as `RovingFocusGroup` updates the stop\n    // based on focus, and in some situations our triggers won't ever be given focus\n    // (e.g. click to open and then outside to close)\n    const [currentTabStopId, setCurrentTabStopId] = React.useState<string | null>(null);\n\n    return (\n      <MenubarContextProvider\n        scope={__scopeMenubar}\n        value={value}\n        onMenuOpen={React.useCallback(\n          (value) => {\n            setValue(value);\n            setCurrentTabStopId(value);\n          },\n          [setValue]\n        )}\n        onMenuClose={React.useCallback(() => setValue(''), [setValue])}\n        onMenuToggle={React.useCallback(\n          (value) => {\n            setValue((prevValue) => (Boolean(prevValue) ? '' : value));\n            // `openMenuOpen` and `onMenuToggle` are called exclusively so we\n            // need to update the id in either case.\n            setCurrentTabStopId(value);\n          },\n          [setValue]\n        )}\n        dir={direction}\n        loop={loop}\n      >\n        <Collection.Provider scope={__scopeMenubar}>\n          <Collection.Slot scope={__scopeMenubar}>\n            <RovingFocusGroup.Root\n              asChild\n              {...rovingFocusGroupScope}\n              orientation=\"horizontal\"\n              loop={loop}\n              dir={direction}\n              currentTabStopId={currentTabStopId}\n              onCurrentTabStopIdChange={setCurrentTabStopId}\n            >\n              <Primitive.div role=\"menubar\" {...menubarProps} ref={forwardedRef} />\n            </RovingFocusGroup.Root>\n          </Collection.Slot>\n        </Collection.Provider>\n      </MenubarContextProvider>\n    );\n  }\n);\n\nMenubar.displayName = MENUBAR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenubarMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst MENU_NAME = 'MenubarMenu';\n\ntype MenubarMenuContextValue = {\n  value: string;\n  triggerId: string;\n  triggerRef: React.RefObject<MenubarTriggerElement>;\n  contentId: string;\n  wasKeyboardTriggerOpenRef: React.MutableRefObject<boolean>;\n};\n\nconst [MenubarMenuProvider, useMenubarMenuContext] =\n  createMenubarContext<MenubarMenuContextValue>(MENU_NAME);\n\ninterface MenubarMenuProps {\n  value?: string;\n  children?: React.ReactNode;\n}\n\nconst MenubarMenu = (props: ScopedProps<MenubarMenuProps>) => {\n  const { __scopeMenubar, value: valueProp, ...menuProps } = props;\n  const autoValue = useId();\n  // We need to provide an initial deterministic value as `useId` will return\n  // empty string on the first render and we don't want to match our internal \"closed\" value.\n  const value = valueProp || autoValue || 'LEGACY_REACT_AUTO_VALUE';\n  const context = useMenubarContext(MENU_NAME, __scopeMenubar);\n  const menuScope = useMenuScope(__scopeMenubar);\n  const triggerRef = React.useRef<MenubarTriggerElement>(null);\n  const wasKeyboardTriggerOpenRef = React.useRef(false);\n  const open = context.value === value;\n\n  React.useEffect(() => {\n    if (!open) wasKeyboardTriggerOpenRef.current = false;\n  }, [open]);\n\n  return (\n    <MenubarMenuProvider\n      scope={__scopeMenubar}\n      value={value}\n      triggerId={useId()}\n      triggerRef={triggerRef}\n      contentId={useId()}\n      wasKeyboardTriggerOpenRef={wasKeyboardTriggerOpenRef}\n    >\n      <MenuPrimitive.Root\n        {...menuScope}\n        open={open}\n        onOpenChange={(open) => {\n          // Menu only calls `onOpenChange` when dismissing so we\n          // want to close our MenuBar based on the same events.\n          if (!open) context.onMenuClose();\n        }}\n        modal={false}\n        dir={context.dir}\n        {...menuProps}\n      />\n    </MenubarMenuProvider>\n  );\n};\n\nMenubarMenu.displayName = MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenubarTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'MenubarTrigger';\n\ntype MenubarTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface MenubarTriggerProps extends PrimitiveButtonProps {}\n\nconst MenubarTrigger = React.forwardRef<MenubarTriggerElement, MenubarTriggerProps>(\n  (props: ScopedProps<MenubarTriggerProps>, forwardedRef) => {\n    const { __scopeMenubar, disabled = false, ...triggerProps } = props;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenubar);\n    const menuScope = useMenuScope(__scopeMenubar);\n    const context = useMenubarContext(TRIGGER_NAME, __scopeMenubar);\n    const menuContext = useMenubarMenuContext(TRIGGER_NAME, __scopeMenubar);\n    const ref = React.useRef<MenubarTriggerElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, menuContext.triggerRef);\n    const [isFocused, setIsFocused] = React.useState(false);\n    const open = context.value === menuContext.value;\n\n    return (\n      <Collection.ItemSlot scope={__scopeMenubar} value={menuContext.value} disabled={disabled}>\n        <RovingFocusGroup.Item\n          asChild\n          {...rovingFocusGroupScope}\n          focusable={!disabled}\n          tabStopId={menuContext.value}\n        >\n          <MenuPrimitive.Anchor asChild {...menuScope}>\n            <Primitive.button\n              type=\"button\"\n              role=\"menuitem\"\n              id={menuContext.triggerId}\n              aria-haspopup=\"menu\"\n              aria-expanded={open}\n              aria-controls={open ? menuContext.contentId : undefined}\n              data-highlighted={isFocused ? '' : undefined}\n              data-state={open ? 'open' : 'closed'}\n              data-disabled={disabled ? '' : undefined}\n              disabled={disabled}\n              {...triggerProps}\n              ref={composedRefs}\n              onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n                // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n                // but not when the control key is pressed (avoiding MacOS right click)\n                if (!disabled && event.button === 0 && event.ctrlKey === false) {\n                  context.onMenuOpen(menuContext.value);\n                  // prevent trigger focusing when opening\n                  // this allows the content to be given focus without competition\n                  if (!open) event.preventDefault();\n                }\n              })}\n              onPointerEnter={composeEventHandlers(props.onPointerEnter, () => {\n                const menubarOpen = Boolean(context.value);\n                if (menubarOpen && !open) {\n                  context.onMenuOpen(menuContext.value);\n                  ref.current?.focus();\n                }\n              })}\n              onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n                if (disabled) return;\n                if (['Enter', ' '].includes(event.key)) context.onMenuToggle(menuContext.value);\n                if (event.key === 'ArrowDown') context.onMenuOpen(menuContext.value);\n                // prevent keydown from scrolling window / first focused item to execute\n                // that keydown (inadvertently closing the menu)\n                if (['Enter', ' ', 'ArrowDown'].includes(event.key)) {\n                  menuContext.wasKeyboardTriggerOpenRef.current = true;\n                  event.preventDefault();\n                }\n              })}\n              onFocus={composeEventHandlers(props.onFocus, () => setIsFocused(true))}\n              onBlur={composeEventHandlers(props.onBlur, () => setIsFocused(false))}\n            />\n          </MenuPrimitive.Anchor>\n        </RovingFocusGroup.Item>\n      </Collection.ItemSlot>\n    );\n  }\n);\n\nMenubarTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenubarPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'MenubarPortal';\n\ntype MenuPortalProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Portal>;\ninterface MenubarPortalProps extends MenuPortalProps {}\n\nconst MenubarPortal: React.FC<MenubarPortalProps> = (props: ScopedProps<MenubarPortalProps>) => {\n  const { __scopeMenubar, ...portalProps } = props;\n  const menuScope = useMenuScope(__scopeMenubar);\n  return <MenuPrimitive.Portal {...menuScope} {...portalProps} />;\n};\n\nMenubarPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenubarContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'MenubarContent';\n\ntype MenubarContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuContentProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Content>;\ninterface MenubarContentProps extends Omit<MenuContentProps, 'onEntryFocus'> {}\n\nconst MenubarContent = React.forwardRef<MenubarContentElement, MenubarContentProps>(\n  (props: ScopedProps<MenubarContentProps>, forwardedRef) => {\n    const { __scopeMenubar, align = 'start', ...contentProps } = props;\n    const menuScope = useMenuScope(__scopeMenubar);\n    const context = useMenubarContext(CONTENT_NAME, __scopeMenubar);\n    const menuContext = useMenubarMenuContext(CONTENT_NAME, __scopeMenubar);\n    const getItems = useCollection(__scopeMenubar);\n    const hasInteractedOutsideRef = React.useRef(false);\n\n    return (\n      <MenuPrimitive.Content\n        id={menuContext.contentId}\n        aria-labelledby={menuContext.triggerId}\n        data-radix-menubar-content=\"\"\n        {...menuScope}\n        {...contentProps}\n        ref={forwardedRef}\n        align={align}\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          const menubarOpen = Boolean(context.value);\n          if (!menubarOpen && !hasInteractedOutsideRef.current) {\n            menuContext.triggerRef.current?.focus();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          // Always prevent auto focus because we either focus manually or want user agent focus\n          event.preventDefault();\n        })}\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) => {\n          const target = event.target as HTMLElement;\n          const isMenubarTrigger = getItems().some((item) => item.ref.current?.contains(target));\n          if (isMenubarTrigger) event.preventDefault();\n        })}\n        onInteractOutside={composeEventHandlers(props.onInteractOutside, () => {\n          hasInteractedOutsideRef.current = true;\n        })}\n        onEntryFocus={(event) => {\n          if (!menuContext.wasKeyboardTriggerOpenRef.current) event.preventDefault();\n        }}\n        onKeyDown={composeEventHandlers(\n          props.onKeyDown,\n          (event) => {\n            if (['ArrowRight', 'ArrowLeft'].includes(event.key)) {\n              const target = event.target as HTMLElement;\n              const targetIsSubTrigger = target.hasAttribute('data-radix-menubar-subtrigger');\n              const isKeyDownInsideSubMenu =\n                target.closest('[data-radix-menubar-content]') !== event.currentTarget;\n\n              const prevMenuKey = context.dir === 'rtl' ? 'ArrowRight' : 'ArrowLeft';\n              const isPrevKey = prevMenuKey === event.key;\n              const isNextKey = !isPrevKey;\n\n              // Prevent navigation when we're opening a submenu\n              if (isNextKey && targetIsSubTrigger) return;\n              // or we're inside a submenu and are moving backwards to close it\n              if (isKeyDownInsideSubMenu && isPrevKey) return;\n\n              const items = getItems().filter((item) => !item.disabled);\n              let candidateValues = items.map((item) => item.value);\n              if (isPrevKey) candidateValues.reverse();\n\n              const currentIndex = candidateValues.indexOf(menuContext.value);\n\n              candidateValues = context.loop\n                ? wrapArray(candidateValues, currentIndex + 1)\n                : candidateValues.slice(currentIndex + 1);\n\n              const [nextValue] = candidateValues;\n              if (nextValue) context.onMenuOpen(nextValue);\n            }\n          },\n          { checkForDefaultPrevented: false }\n        )}\n        style={{\n          ...props.style,\n          // re-namespace exposed content custom properties\n          ...{\n            '--radix-menubar-content-transform-origin': 'var(--radix-popper-transform-origin)',\n            '--radix-menubar-content-available-width': 'var(--radix-popper-available-width)',\n            '--radix-menubar-content-available-height': 'var(--radix-popper-available-height)',\n            '--radix-menubar-trigger-width': 'var(--radix-popper-anchor-width)',\n            '--radix-menubar-trigger-height': 'var(--radix-popper-anchor-height)',\n          },\n        }}\n      />\n    );\n  }\n);\n\nMenubarContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenubarGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'MenubarGroup';\n\ntype MenubarGroupElement = React.ElementRef<typeof MenuPrimitive.Group>;\ntype MenuGroupProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Group>;\ninterface MenubarGroupProps extends MenuGroupProps {}\n\nconst MenubarGroup = React.forwardRef<MenubarGroupElement, MenubarGroupProps>(\n  (props: ScopedProps<MenubarGroupProps>, forwardedRef) => {\n    const { __scopeMenubar, ...groupProps } = props;\n    const menuScope = useMenuScope(__scopeMenubar);\n    return <MenuPrimitive.Group {...menuScope} {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nMenubarGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenubarLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'MenubarLabel';\n\ntype MenubarLabelElement = React.ElementRef<typeof MenuPrimitive.Label>;\ntype MenuLabelProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Label>;\ninterface MenubarLabelProps extends MenuLabelProps {}\n\nconst MenubarLabel = React.forwardRef<MenubarLabelElement, MenubarLabelProps>(\n  (props: ScopedProps<MenubarLabelProps>, forwardedRef) => {\n    const { __scopeMenubar, ...labelProps } = props;\n    const menuScope = useMenuScope(__scopeMenubar);\n    return <MenuPrimitive.Label {...menuScope} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nMenubarLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenubarItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'MenubarItem';\n\ntype MenubarItemElement = React.ElementRef<typeof MenuPrimitive.Item>;\ntype MenuItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Item>;\ninterface MenubarItemProps extends MenuItemProps {}\n\nconst MenubarItem = React.forwardRef<MenubarItemElement, MenubarItemProps>(\n  (props: ScopedProps<MenubarItemProps>, forwardedRef) => {\n    const { __scopeMenubar, ...itemProps } = props;\n    const menuScope = useMenuScope(__scopeMenubar);\n    return <MenuPrimitive.Item {...menuScope} {...itemProps} ref={forwardedRef} />;\n  }\n);\n\nMenubarItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenubarCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'MenubarCheckboxItem';\n\ntype MenubarCheckboxItemElement = React.ElementRef<typeof MenuPrimitive.CheckboxItem>;\ntype MenuCheckboxItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.CheckboxItem>;\ninterface MenubarCheckboxItemProps extends MenuCheckboxItemProps {}\n\nconst MenubarCheckboxItem = React.forwardRef<MenubarCheckboxItemElement, MenubarCheckboxItemProps>(\n  (props: ScopedProps<MenubarCheckboxItemProps>, forwardedRef) => {\n    const { __scopeMenubar, ...checkboxItemProps } = props;\n    const menuScope = useMenuScope(__scopeMenubar);\n    return <MenuPrimitive.CheckboxItem {...menuScope} {...checkboxItemProps} ref={forwardedRef} />;\n  }\n);\n\nMenubarCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenubarRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'MenubarRadioGroup';\n\ntype MenubarRadioGroupElement = React.ElementRef<typeof MenuPrimitive.RadioGroup>;\ntype MenuRadioGroupProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioGroup>;\ninterface MenubarRadioGroupProps extends MenuRadioGroupProps {}\n\nconst MenubarRadioGroup = React.forwardRef<MenubarRadioGroupElement, MenubarRadioGroupProps>(\n  (props: ScopedProps<MenubarRadioGroupProps>, forwardedRef) => {\n    const { __scopeMenubar, ...radioGroupProps } = props;\n    const menuScope = useMenuScope(__scopeMenubar);\n    return <MenuPrimitive.RadioGroup {...menuScope} {...radioGroupProps} ref={forwardedRef} />;\n  }\n);\n\nMenubarRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenubarRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'MenubarRadioItem';\n\ntype MenubarRadioItemElement = React.ElementRef<typeof MenuPrimitive.RadioItem>;\ntype MenuRadioItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioItem>;\ninterface MenubarRadioItemProps extends MenuRadioItemProps {}\n\nconst MenubarRadioItem = React.forwardRef<MenubarRadioItemElement, MenubarRadioItemProps>(\n  (props: ScopedProps<MenubarRadioItemProps>, forwardedRef) => {\n    const { __scopeMenubar, ...radioItemProps } = props;\n    const menuScope = useMenuScope(__scopeMenubar);\n    return <MenuPrimitive.RadioItem {...menuScope} {...radioItemProps} ref={forwardedRef} />;\n  }\n);\n\nMenubarRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenubarItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'MenubarItemIndicator';\n\ntype MenubarItemIndicatorElement = React.ElementRef<typeof MenuPrimitive.ItemIndicator>;\ntype MenuItemIndicatorProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.ItemIndicator>;\ninterface MenubarItemIndicatorProps extends MenuItemIndicatorProps {}\n\nconst MenubarItemIndicator = React.forwardRef<\n  MenubarItemIndicatorElement,\n  MenubarItemIndicatorProps\n>((props: ScopedProps<MenubarItemIndicatorProps>, forwardedRef) => {\n  const { __scopeMenubar, ...itemIndicatorProps } = props;\n  const menuScope = useMenuScope(__scopeMenubar);\n  return <MenuPrimitive.ItemIndicator {...menuScope} {...itemIndicatorProps} ref={forwardedRef} />;\n});\n\nMenubarItemIndicator.displayName = INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenubarSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'MenubarSeparator';\n\ntype MenubarSeparatorElement = React.ElementRef<typeof MenuPrimitive.Separator>;\ntype MenuSeparatorProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Separator>;\ninterface MenubarSeparatorProps extends MenuSeparatorProps {}\n\nconst MenubarSeparator = React.forwardRef<MenubarSeparatorElement, MenubarSeparatorProps>(\n  (props: ScopedProps<MenubarSeparatorProps>, forwardedRef) => {\n    const { __scopeMenubar, ...separatorProps } = props;\n    const menuScope = useMenuScope(__scopeMenubar);\n    return <MenuPrimitive.Separator {...menuScope} {...separatorProps} ref={forwardedRef} />;\n  }\n);\n\nMenubarSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenubarArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'MenubarArrow';\n\ntype MenubarArrowElement = React.ElementRef<typeof MenuPrimitive.Arrow>;\ntype MenuArrowProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Arrow>;\ninterface MenubarArrowProps extends MenuArrowProps {}\n\nconst MenubarArrow = React.forwardRef<MenubarArrowElement, MenubarArrowProps>(\n  (props: ScopedProps<MenubarArrowProps>, forwardedRef) => {\n    const { __scopeMenubar, ...arrowProps } = props;\n    const menuScope = useMenuScope(__scopeMenubar);\n    return <MenuPrimitive.Arrow {...menuScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nMenubarArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenubarSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'MenubarSub';\n\ninterface MenubarSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst MenubarSub: React.FC<MenubarSubProps> = (props: ScopedProps<MenubarSubProps>) => {\n  const { __scopeMenubar, children, open: openProp, onOpenChange, defaultOpen } = props;\n  const menuScope = useMenuScope(__scopeMenubar);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <MenuPrimitive.Sub {...menuScope} open={open} onOpenChange={setOpen}>\n      {children}\n    </MenuPrimitive.Sub>\n  );\n};\n\nMenubarSub.displayName = SUB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenubarSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'MenubarSubTrigger';\n\ntype MenubarSubTriggerElement = React.ElementRef<typeof MenuPrimitive.SubTrigger>;\ntype MenuSubTriggerProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.SubTrigger>;\ninterface MenubarSubTriggerProps extends MenuSubTriggerProps {}\n\nconst MenubarSubTrigger = React.forwardRef<MenubarSubTriggerElement, MenubarSubTriggerProps>(\n  (props: ScopedProps<MenubarSubTriggerProps>, forwardedRef) => {\n    const { __scopeMenubar, ...subTriggerProps } = props;\n    const menuScope = useMenuScope(__scopeMenubar);\n    return (\n      <MenuPrimitive.SubTrigger\n        data-radix-menubar-subtrigger=\"\"\n        {...menuScope}\n        {...subTriggerProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nMenubarSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenubarSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'MenubarSubContent';\n\ntype MenubarSubContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuSubContentProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.SubContent>;\ninterface MenubarSubContentProps extends MenuSubContentProps {}\n\nconst MenubarSubContent = React.forwardRef<MenubarSubContentElement, MenubarSubContentProps>(\n  (props: ScopedProps<MenubarSubContentProps>, forwardedRef) => {\n    const { __scopeMenubar, ...subContentProps } = props;\n    const menuScope = useMenuScope(__scopeMenubar);\n\n    return (\n      <MenuPrimitive.SubContent\n        {...menuScope}\n        data-radix-menubar-content=\"\"\n        {...subContentProps}\n        ref={forwardedRef}\n        style={{\n          ...props.style,\n          // re-namespace exposed content custom properties\n          ...{\n            '--radix-menubar-content-transform-origin': 'var(--radix-popper-transform-origin)',\n            '--radix-menubar-content-available-width': 'var(--radix-popper-available-width)',\n            '--radix-menubar-content-available-height': 'var(--radix-popper-available-height)',\n            '--radix-menubar-trigger-width': 'var(--radix-popper-anchor-width)',\n            '--radix-menubar-trigger-height': 'var(--radix-popper-anchor-height)',\n          },\n        }}\n      />\n    );\n  }\n);\n\nMenubarSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\nconst Root = Menubar;\nconst Menu = MenubarMenu;\nconst Trigger = MenubarTrigger;\nconst Portal = MenubarPortal;\nconst Content = MenubarContent;\nconst Group = MenubarGroup;\nconst Label = MenubarLabel;\nconst Item = MenubarItem;\nconst CheckboxItem = MenubarCheckboxItem;\nconst RadioGroup = MenubarRadioGroup;\nconst RadioItem = MenubarRadioItem;\nconst ItemIndicator = MenubarItemIndicator;\nconst Separator = MenubarSeparator;\nconst Arrow = MenubarArrow;\nconst Sub = MenubarSub;\nconst SubTrigger = MenubarSubTrigger;\nconst SubContent = MenubarSubContent;\n\nexport {\n  createMenubarScope,\n  //\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarPortal,\n  MenubarContent,\n  MenubarGroup,\n  MenubarLabel,\n  MenubarItem,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarItemIndicator,\n  MenubarSeparator,\n  MenubarArrow,\n  MenubarSub,\n  MenubarSubTrigger,\n  MenubarSubContent,\n  //\n  Root,\n  Menu,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  MenubarProps,\n  MenubarMenuProps,\n  MenubarTriggerProps,\n  MenubarPortalProps,\n  MenubarContentProps,\n  MenubarGroupProps,\n  MenubarLabelProps,\n  MenubarItemProps,\n  MenubarCheckboxItemProps,\n  MenubarRadioGroupProps,\n  MenubarRadioItemProps,\n  MenubarItemIndicatorProps,\n  MenubarSeparatorProps,\n  MenubarArrowProps,\n  MenubarSubProps,\n  MenubarSubTriggerProps,\n  MenubarSubContentProps,\n};\n"],"names":["createMenubarScope","Menubar","MenubarMenu","MenubarTrigger","MenubarPortal","MenubarContent","MenubarGroup","MenubarLabel","MenubarItem","MenubarCheckboxItem","MenubarRadioGroup","MenubarRadioItem","MenubarItemIndicator","MenubarSeparator","MenubarArrow","MenubarSub","MenubarSubTrigger","MenubarSubContent","Root","Menu","Trigger","Portal","Content","Group","Label","Item","CheckboxItem","RadioGroup","RadioItem","ItemIndicator","Separator","Arrow","Sub","SubTrigger","SubContent","React","createCollection","useDirection","composeEventHandlers","useComposedRefs","createContextScope","useId","MenuPrimitive","createMenuScope","RovingFocusGroup","createRovingFocusGroupScope","Primitive","useControllableState","MENUBAR_NAME","Collection","useCollection","createCollectionScope","createMenubarContext","useMenuScope","useRovingFocusGroupScope","MenubarContextProvider","useMenubarContext","forwardRef","props","forwardedRef","__scopeMenubar","value","valueProp","onValueChange","defaultValue","loop","dir","menubarProps","direction","rovingFocusGroupScope","setValue","prop","onChange","defaultProp","currentTabStopId","setCurrentTabStopId","useState","useCallback","prevValue","Boolean","MENU_NAME","MenubarMenuProvider","useMenubarMenuContext","menuProps","autoValue","context","menuScope","triggerRef","useRef","wasKeyboardTriggerOpenRef","open","useEffect","current","onMenuClose","TRIGGER_NAME","disabled","triggerProps","menuContext","ref","composedRefs","isFocused","setIsFocused","triggerId","contentId","undefined","onPointerDown","event","button","ctrlKey","onMenuOpen","preventDefault","onPointerEnter","menubarOpen","focus","onKeyDown","includes","key","onMenuToggle","onFocus","onBlur","PORTAL_NAME","portalProps","CONTENT_NAME","align","contentProps","getItems","hasInteractedOutsideRef","onCloseAutoFocus","onFocusOutside","target","isMenubarTrigger","some","item","contains","onInteractOutside","targetIsSubTrigger","hasAttribute","isKeyDownInsideSubMenu","closest","currentTarget","prevMenuKey","isPrevKey","isNextKey","items","filter","candidateValues","map","reverse","currentIndex","indexOf","wrapArray","slice","nextValue","checkForDefaultPrevented","style","GROUP_NAME","groupProps","LABEL_NAME","labelProps","ITEM_NAME","itemProps","CHECKBOX_ITEM_NAME","checkboxItemProps","RADIO_GROUP_NAME","radioGroupProps","RADIO_ITEM_NAME","radioItemProps","INDICATOR_NAME","itemIndicatorProps","SEPARATOR_NAME","separatorProps","ARROW_NAME","arrowProps","SUB_NAME","children","openProp","onOpenChange","defaultOpen","setOpen","SUB_TRIGGER_NAME","subTriggerProps","SUB_CONTENT_NAME","subContentProps","array","startIndex","_","index","length"],"version":3,"file":"index.js.map"}